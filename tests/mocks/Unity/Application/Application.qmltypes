import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -notrelocatable Unity.Application 0.1 tests/mocks'

Module {
    Component {
        name: "ApplicationImage"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Unity.Application/ApplicationImage 0.1"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "FillMode"
            values: {
                "Stretch": 0,
                "PreserveAspectCrop": 1
            }
        }
        Property { name: "source"; type: "ApplicationInfo"; isPointer: true }
        Property { name: "fillMode"; type: "FillMode" }
        Property { name: "ready"; type: "bool" }
        Method { name: "scheduleUpdate" }
        Method { name: "updateFromCache" }
    }
    Component {
        name: "ApplicationInfo"
        prototype: "unity::shell::application::ApplicationInfoInterface"
        exports: ["Unity.Application/ApplicationInfo 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "fullscreen"; type: "bool" }
        Property { name: "stage"; type: "Stage" }
        Property { name: "imageQml"; type: "string" }
        Property { name: "windowQml"; type: "string" }
        Signal { name: "appIdChanged" }
        Signal { name: "nameChanged" }
        Signal { name: "commentChanged" }
        Signal { name: "iconChanged" }
        Signal { name: "stateChanged" }
        Signal { name: "focusedChanged" }
        Signal { name: "screenshotChanged" }
    }
    Component {
        name: "ApplicationManager"
        prototype: "unity::shell::application::ApplicationManagerInterface"
        exports: ["Unity.Application/ApplicationManager 0.1"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Role"
            values: {
                "Dash": 0,
                "Default": 1,
                "Indicators": 2,
                "Notifications": 3,
                "Greeter": 4,
                "Launcher": 5,
                "OnScreenKeyboard": 6,
                "ShutdownDialog": 7
            }
        }
        Enum {
            name: "StageHint"
            values: {
                "MainStage": 0,
                "IntegrationStage": 1,
                "ShareStage": 2,
                "ContentPickingStage": 3,
                "SideStage": 4,
                "ConfigurationStage": 5
            }
        }
        Enum {
            name: "FormFactorHint"
            values: {
                "DesktopFormFactor": 0,
                "PhoneFormFactor": 1,
                "TabletFormFactor": 2
            }
        }
        Enum {
            name: "FavoriteApplication"
            values: {
                "CameraApplication": 0,
                "GalleryApplication": 1,
                "BrowserApplication": 2,
                "ShareApplication": 3,
                "PhoneApplication": 4,
                "DialerApplication": 5,
                "MessagingApplication": 6,
                "AddressbookApplication": 7
            }
        }
        Enum {
            name: "ExecFlags"
            values: {
                "NoFlag": 0,
                "ForceMainStage": 1
            }
        }
        Property { name: "sideStageWidth"; type: "int"; isReadonly: true }
        Property { name: "stageHint"; type: "StageHint"; isReadonly: true }
        Property { name: "formFactorHint"; type: "FormFactorHint"; isReadonly: true }
        Property { name: "fake"; type: "bool"; isReadonly: true }
        Property { name: "rightMargin"; type: "int" }
        Signal {
            name: "focusRequested"
            Parameter { name: "favoriteApplication"; type: "FavoriteApplication" }
        }
        Signal {
            name: "focusRequested"
            Parameter { name: "appId"; type: "string" }
        }
        Method {
            name: "get"
            type: "ApplicationInfo*"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "findApplication"
            type: "ApplicationInfo*"
            Parameter { name: "appId"; type: "string" }
        }
        Method {
            name: "move"
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
        Method {
            name: "requestFocusApplication"
            type: "bool"
            Parameter { name: "appId"; type: "string" }
        }
        Method {
            name: "focusApplication"
            type: "bool"
            Parameter { name: "appId"; type: "string" }
        }
        Method { name: "unfocusCurrentApplication" }
        Method {
            name: "startApplication"
            type: "ApplicationInfo*"
            Parameter { name: "appId"; type: "string" }
            Parameter { name: "arguments"; type: "QStringList" }
        }
        Method {
            name: "startApplication"
            type: "ApplicationInfo*"
            Parameter { name: "appId"; type: "string" }
        }
        Method {
            name: "startApplication"
            type: "ApplicationInfo*"
            Parameter { name: "appId"; type: "string" }
            Parameter { name: "flags"; type: "ExecFlags" }
            Parameter { name: "arguments"; type: "QStringList" }
        }
        Method {
            name: "startApplication"
            type: "ApplicationInfo*"
            Parameter { name: "appId"; type: "string" }
            Parameter { name: "flags"; type: "ExecFlags" }
        }
        Method {
            name: "stopApplication"
            type: "bool"
            Parameter { name: "appId"; type: "string" }
        }
        Method {
            name: "updateScreenshot"
            type: "bool"
            Parameter { name: "appId"; type: "string" }
        }
        Method { name: "availableApplications"; type: "QStringList" }
    }
    Component {
        name: "unity::shell::application::ApplicationInfoInterface"
        prototype: "QObject"
        exports: ["Unity.Application/ApplicationInfoInterface 0.1"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Stage"
            values: {
                "MainStage": 0,
                "SideStage": 1
            }
        }
        Enum {
            name: "State"
            values: {
                "Starting": 0,
                "Running": 1,
                "Suspended": 2,
                "Stopped": 3
            }
        }
        Property { name: "appId"; type: "string"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "comment"; type: "string"; isReadonly: true }
        Property { name: "icon"; type: "QUrl"; isReadonly: true }
        Property { name: "stage"; type: "Stage"; isReadonly: true }
        Property { name: "state"; type: "State"; isReadonly: true }
        Property { name: "focused"; type: "bool"; isReadonly: true }
        Property { name: "screenshot"; type: "QUrl"; isReadonly: true }
        Signal {
            name: "nameChanged"
            Parameter { name: "name"; type: "string" }
        }
        Signal {
            name: "commentChanged"
            Parameter { name: "comment"; type: "string" }
        }
        Signal {
            name: "iconChanged"
            Parameter { name: "icon"; type: "QUrl" }
        }
        Signal {
            name: "stageChanged"
            Parameter { name: "stage"; type: "Stage" }
        }
        Signal {
            name: "stateChanged"
            Parameter { name: "state"; type: "State" }
        }
        Signal {
            name: "focusedChanged"
            Parameter { name: "focused"; type: "bool" }
        }
        Signal {
            name: "screenshotChanged"
            Parameter { name: "screenshot"; type: "QUrl" }
        }
    }
    Component {
        name: "unity::shell::application::ApplicationManagerInterface"
        prototype: "QAbstractListModel"
        exports: ["Unity.Application/ApplicationManagerInterface 0.1"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Roles"
            values: {
                "RoleAppId": 256,
                "RoleName": 257,
                "RoleComment": 258,
                "RoleIcon": 259,
                "RoleStage": 260,
                "RoleState": 261,
                "RoleFocused": 262,
                "RoleScreenshot": 263
            }
        }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "focusedApplicationId"; type: "string"; isReadonly: true }
        Property { name: "suspended"; type: "bool" }
        Signal {
            name: "focusRequested"
            Parameter { name: "appId"; type: "string" }
        }
        Signal {
            name: "applicationAdded"
            Parameter { name: "appId"; type: "string" }
        }
        Signal {
            name: "applicationRemoved"
            Parameter { name: "appId"; type: "string" }
        }
        Method {
            name: "get"
            type: "unity::shell::application::ApplicationInfoInterface*"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "findApplication"
            type: "unity::shell::application::ApplicationInfoInterface*"
            Parameter { name: "appId"; type: "string" }
        }
        Method {
            name: "requestFocusApplication"
            type: "bool"
            Parameter { name: "appId"; type: "string" }
        }
        Method {
            name: "focusApplication"
            type: "bool"
            Parameter { name: "appId"; type: "string" }
        }
        Method { name: "unfocusCurrentApplication" }
        Method {
            name: "startApplication"
            type: "unity::shell::application::ApplicationInfoInterface*"
            Parameter { name: "appId"; type: "string" }
            Parameter { name: "arguments"; type: "QStringList" }
        }
        Method {
            name: "stopApplication"
            type: "bool"
            Parameter { name: "appId"; type: "string" }
        }
        Method {
            name: "updateScreenshot"
            type: "bool"
            Parameter { name: "appId"; type: "string" }
        }
    }
}
